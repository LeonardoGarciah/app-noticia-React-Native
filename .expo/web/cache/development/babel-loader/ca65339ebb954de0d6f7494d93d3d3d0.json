{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as firebase from \"firebase/app\";\nimport { db } from \"./firebase.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      noticias = _useState2[0],\n      setarNoticias = _useState2[1];\n\n  useEffect(function () {\n    db.collection('noticias').orderBy('data', 'desc').onSnapshot(function (snapshot) {\n      setarNoticias(snapshot.docs.map(function (doc) {\n        return {\n          info: doc.data()\n        };\n      }));\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(View, {\n      style: {\n        flex: 0.4\n      },\n      children: _jsx(ScrollView, {\n        horizontal: true,\n        contentContainerStyle: {\n          width: \"200%\",\n          height: 250\n        },\n        style: {\n          flex: 1\n        },\n        children: noticias.map(function (val, index) {\n          if (index < 2) {\n            return _jsxs(ImageBackground, {\n              source: {\n                uri: val.info.imagem\n              },\n              resizeMode: \"cover\",\n              style: styles.image,\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"Noticia\", {\n                    titulo: val.info.titulo,\n                    noticia: val.info.conteudo,\n                    imagem: val.info.imagem\n                  });\n                },\n                style: styles.shadow\n              }), _jsx(Text, {\n                style: {\n                  fontSize: 29,\n                  color: \"white\"\n                },\n                children: val.info.titulo\n              })]\n            });\n          }\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        flex: 0.6,\n        padding: 20\n      },\n      children: [_jsx(View, {\n        style: {\n          width: 50,\n          height: 2,\n          backgroundColor: \"#069\",\n          position: \"absolute\",\n          left: 40,\n          top: 40\n        }\n      }), _jsx(Text, {\n        children: \"Mais noticias!\"\n      }), _jsx(ScrollView, {\n        contentContainerStyle: {\n          padding: 20\n        },\n        style: {\n          flex: 1\n        },\n        children: noticias.map(function (val, index) {\n          if (index >= 2) {\n            return _jsx(View, {\n              style: {\n                flexDirection: \"row\",\n                marginBottom: 10\n              },\n              children: _jsxs(TouchableOpacity, {\n                style: {\n                  flexDirection: \"row\"\n                },\n                onPress: function onPress() {\n                  return navigation.navigate(\"Noticia\", {\n                    titulo: val.info.titulo,\n                    noticia: val.info.conteudo,\n                    imagem: val.info.imagem\n                  });\n                },\n                children: [_jsx(Image, {\n                  source: {\n                    uri: val.info.imagem\n                  },\n                  style: {\n                    width: 100,\n                    height: 100\n                  }\n                }), _jsx(Text, {\n                  style: {\n                    padding: 10,\n                    width: '75%'\n                  },\n                  children: val.info.titulo\n                })]\n              })\n            });\n          }\n        })\n      })]\n    })]\n  });\n}\n\nfunction NoticiaScreen(_ref2) {\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(ScrollView, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(ImageBackground, {\n        source: {\n          uri: route.params.imagem\n        },\n        resizeMode: \"cover\",\n        style: styles.imageNoticia,\n        children: _jsx(View, {\n          style: styles.shadow,\n          children: _jsx(Text, {\n            style: {\n              fontSize: 29,\n              color: \"white\"\n            },\n            children: route.params.titulo\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1,\n          padding: 20\n        },\n        children: route.params.noticia.split(\"/n\").map(function (val) {\n          return _jsx(Text, {\n            style: {\n              fontSize: 15,\n              padding: 3\n            },\n            children: val\n          });\n        })\n      })]\n    })\n  });\n}\n\nvar Stack = createNativeStackNavigator();\n\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Portal\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Noticia\",\n        component: NoticiaScreen\n      })]\n    })\n  });\n}\n\nexport default App;\nvar styles = StyleSheet.create({\n  image: {\n    resizeMode: \"cover\",\n    flex: 1,\n    justifyContent: \"flex-end\",\n    width: \"100%\"\n  },\n  imageNoticia: {\n    resizeMode: \"cover\",\n    flex: 0.6,\n    width: \"100%\",\n    height: 200\n  },\n  shadow: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    justifyContent: 'flex-end'\n  }\n});","map":{"version":3,"sources":["C:/Users/leona/Desktop/DankiCode/Desenvolvimento App/app-noticia/App.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","firebase","db","HomeScreen","navigation","noticias","setarNoticias","collection","orderBy","onSnapshot","snapshot","docs","map","doc","info","data","flex","width","height","val","index","uri","imagem","styles","image","navigate","titulo","noticia","conteudo","shadow","fontSize","color","padding","backgroundColor","position","left","top","flexDirection","marginBottom","NoticiaScreen","route","params","imageNoticia","split","Stack","App","StyleSheet","create","resizeMode","justifyContent"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport {\n  View,\n  Text,\n  ScrollView,\n  ImageBackground,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as firebase from \"firebase/app\";\nimport { db } from \"./firebase.js\";\n\nfunction HomeScreen({ navigation }) {\n\n  const [noticias,setarNoticias] = useState([]);\n\n  useEffect(() => {\n    db.collection('noticias').orderBy('data','desc').onSnapshot(snapshot=>{\n      setarNoticias(snapshot.docs.map((doc)=>{\n        return {info:doc.data()}\n      }));\n    });\n\n  }, [])\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 0.4 }}>\n        <ScrollView\n          horizontal\n          contentContainerStyle={{ width: \"200%\", height: 250 }}\n          style={{ flex: 1 }}\n        >\n\n{\n          noticias.map((val,index)=>{\n            if(index < 2){\n              return(\n          <ImageBackground\n            source={{ uri: val.info.imagem }}\n            resizeMode=\"cover\"\n            style={styles.image}\n          >\n            <TouchableOpacity\n              onPress={() =>\n                navigation.navigate(\"Noticia\", {\n                  titulo: val.info.titulo,\n                  noticia: val.info.conteudo,\n                  imagem:val.info.imagem\n                })\n              }\n              style={styles.shadow}\n            ></TouchableOpacity>\n            <Text style={{ fontSize: 29, color: \"white\" }}>\n              { val.info.titulo}\n            </Text>\n          </ImageBackground>\n              )\n\n            \n          }\n          })\n}\n          \n        </ScrollView>\n      </View>\n      <View style={{ flex: 0.6, padding: 20 }}>\n        <View\n          style={{\n            width: 50,\n            height: 2,\n            backgroundColor: \"#069\",\n            position: \"absolute\",\n            left: 40,\n            top: 40,\n          }}\n        ></View>\n        <Text>Mais noticias!</Text>\n\n        <ScrollView contentContainerStyle={{ padding: 20 }} style={{ flex: 1 }}>\n          {\n          noticias.map((val,index)=>{\n            if(index >= 2){\n              return(\n          <View style={{ flexDirection: \"row\", marginBottom: 10 }}>\n            <TouchableOpacity\n              style={{ flexDirection: \"row\" }}\n              onPress={() =>\n                navigation.navigate(\"Noticia\", {\n                  titulo: val.info.titulo,\n                  noticia: val.info.conteudo,\n                  imagem:val.info.imagem\n                })\n              }\n            >\n              <Image\n                source={{ uri: val.info.imagem }}\n                style={{ width: 100, height: 100 }}\n              ></Image>\n              <Text style={{ padding: 10,width:'75%' }}>{val.info.titulo}</Text>\n            </TouchableOpacity>\n          </View>\n                           )\n\n            \n                          }\n                          })\n                }\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nfunction NoticiaScreen({ route, navigation }) {\n\n  return (\n    <View  style={{flex:1}}>\n    <ScrollView style={{ flex: 1 }} >\n      <ImageBackground\n            source={{ uri: route.params.imagem }}\n            resizeMode=\"cover\"\n            style={styles.imageNoticia}\n          >\n      <View style={styles.shadow}>\n\n            <Text style={{ fontSize: 29, color: \"white\" }}>\n              { route.params.titulo}\n            </Text>\n            </View>\n          </ImageBackground>\n          \n          <View style={{flex:1,padding:20}}>\n          \n      {\n        route.params.noticia.split(\"/n\").map((val)=>{\n          return(\n          <Text style={{fontSize:15,padding:3}}>{val}</Text>\n          )\n    })\n      }\n      </View>\n    </ScrollView>\n    </View>\n  );\n}\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Portal\" component={HomeScreen} />\n        <Stack.Screen name=\"Noticia\" component={NoticiaScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  image: {\n    resizeMode: \"cover\",\n    flex: 1,\n    justifyContent: \"flex-end\",\n    width: \"100%\",\n  },  imageNoticia: {\n    resizeMode: \"cover\",\n    flex: 0.6,\n    width: \"100%\",\n    height:200\n  },\n  shadow: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    justifyContent:'flex-end'\n  },\n});\n"]},"metadata":{},"sourceType":"module"}